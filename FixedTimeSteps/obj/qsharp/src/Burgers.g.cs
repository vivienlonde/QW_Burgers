//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"TypeConstructor\"},\"QualifiedName\":{\"Namespace\":\"Burgers\",\"Name\":\"WalkSpace\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"BasicQuantumFunctionality\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":24,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":18}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"node\"]},\"Type\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Burgers\",\"Name\":\"Node\",\"Range\":{\"Case\":\"Null\"}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":1}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"neighbor\"]},\"Type\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"LittleEndian\",\"Range\":{\"Case\":\"Null\"}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":1}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"nPositions\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":1}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"nVelocities\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":1}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Burgers\",\"Name\":\"Node\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"LittleEndian\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Burgers\",\"Name\":\"WalkSpace\",\"Range\":{\"Case\":\"Null\"}}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":true}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":true}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"WalkSpace\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":24,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":18}},\"Documentation\":[]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Burgers\",\"Name\":\"WalkSpace\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":24,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":18}},\"Type\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Burgers\",\"Name\":\"Node\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"LittleEndian\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"node\",\"Type\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Burgers\",\"Name\":\"Node\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":2,\"Column\":16},\"Item2\":{\"Line\":2,\"Column\":20}}]}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":2,\"Column\":9},\"Item2\":{\"Line\":2,\"Column\":13}}}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"neighbor\",\"Type\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"LittleEndian\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":3,\"Column\":20},\"Item2\":{\"Line\":3,\"Column\":32}}]}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":3,\"Column\":9},\"Item2\":{\"Line\":3,\"Column\":17}}}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"nPositions\",\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":4,\"Column\":9},\"Item2\":{\"Line\":4,\"Column\":19}}}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"nVelocities\",\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":5,\"Column\":9},\"Item2\":{\"Line\":5,\"Column\":20}}}]}]}]]},\"Documentation\":[\" # Summary\",\" nPositions is M.\",\" nVelocities is N.\",\" The first register \\\"node\\\" has size M*log(N),\",\" corresponding to the M binary encodings of the N possible velocities at each position.\",\" The second register \\\"neighbor\\\" has size log(2M+2),\",\" corresponding to the 2M neighbors of a node\",\" (i.e the node with velocity +1 and the node with velocity -1 for each position i \\\\in {1, .., M}),\",\" + an extra state representing the node as a neighbor to itself (for self transitions). By convention it is the state |2M+1>.\",\" + an extra state representing the node (all other states represent directed edges). By convention it is hte state |0>.\",\" This last state flags what is also called the flat subspace.\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"TypeConstructor\"},\"QualifiedName\":{\"Namespace\":\"Burgers\",\"Name\":\"Node\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"BasicQuantumFunctionality\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":33,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":13}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"__Item1__\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"LittleEndian\",\"Range\":{\"Case\":\"Null\"}}]}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":1}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"LittleEndian\",\"Range\":{\"Case\":\"Null\"}}]}]},\"ReturnType\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Burgers\",\"Name\":\"Node\",\"Range\":{\"Case\":\"Null\"}}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":true}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":true}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"Node\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":33,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":13}},\"Documentation\":[]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Burgers\",\"Name\":\"Node\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":33,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":13}},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"LittleEndian\",\"Range\":{\"Case\":\"Null\"}}]}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"LittleEndian\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":16},\"Item2\":{\"Line\":1,\"Column\":28}}]}}]}]}]}]}]]},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Burgers\",\"Name\":\"ProjectToWalkFlatSubspace\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"BasicQuantumFunctionality\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":43,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":36}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"walkState\"]},\"Type\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Burgers\",\"Name\":\"WalkSpace\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":2,\"Column\":21},\"Item2\":{\"Line\":2,\"Column\":30}}]}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":2,\"Column\":9},\"Item2\":{\"Line\":2,\"Column\":18}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Burgers\",\"Name\":\"WalkSpace\",\"Range\":{\"Case\":\"Null\"}}]},\"ReturnType\":{\"Case\":\"Result\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" returns One if the measurement projects to the WalkFlatSubspace.\",\" returns Zero if the measurement projects to a subspace orthogonal to the WalkFlatSubspace.\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"ProjectToWalkFlatSubspace\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":43,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":36}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Burgers\",\"Name\":\"ReflectAboutWalkFlatSubspace\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"BasicQuantumFunctionality\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":54,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":39}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"walkState\"]},\"Type\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Burgers\",\"Name\":\"WalkSpace\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":2,\"Column\":21},\"Item2\":{\"Line\":2,\"Column\":30}}]}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":2,\"Column\":9},\"Item2\":{\"Line\":2,\"Column\":18}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Burgers\",\"Name\":\"WalkSpace\",\"Range\":{\"Case\":\"Null\"}}]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":true,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" reflects about the walk flat subspace.\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":true,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"ReflectAboutWalkFlatSubspace\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":57,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":5}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":true,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"ReflectAboutWalkFlatSubspace\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":61,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":8}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":true,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"ReflectAboutWalkFlatSubspace\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":54,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":3,\"Column\":17},\"Item2\":{\"Line\":3,\"Column\":26}},\"Documentation\":[\"automatically generated QsControlled specialization for Burgers.ReflectAboutWalkFlatSubspace\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":true,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"ReflectAboutWalkFlatSubspace\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":54,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":3,\"Column\":17},\"Item2\":{\"Line\":3,\"Column\":26}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for Burgers.ReflectAboutWalkFlatSubspace\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Burgers\",\"Name\":\"WalkOperatorBurgers\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"BasicQuantumFunctionality\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":64,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":30}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"walkState\"]},\"Type\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Burgers\",\"Name\":\"WalkSpace\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":2,\"Column\":21},\"Item2\":{\"Line\":2,\"Column\":30}}]}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":2,\"Column\":9},\"Item2\":{\"Line\":2,\"Column\":18}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Burgers\",\"Name\":\"WalkSpace\",\"Range\":{\"Case\":\"Null\"}}]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"WalkOperatorBurgers\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":64,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":30}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"WalkOperatorBurgers\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":64,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":3,\"Column\":17},\"Item2\":{\"Line\":3,\"Column\":26}},\"Documentation\":[\"automatically generated QsAdjoint specialization for Burgers.WalkOperatorBurgers\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"WalkOperatorBurgers\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":64,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":3,\"Column\":17},\"Item2\":{\"Line\":3,\"Column\":26}},\"Documentation\":[\"automatically generated QsControlled specialization for Burgers.WalkOperatorBurgers\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"WalkOperatorBurgers\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":64,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":3,\"Column\":17},\"Item2\":{\"Line\":3,\"Column\":26}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for Burgers.WalkOperatorBurgers\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Burgers\",\"Name\":\"ShiftBurgers\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"BasicQuantumFunctionality\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":78,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":23}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"walkState\"]},\"Type\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Burgers\",\"Name\":\"WalkSpace\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":2,\"Column\":21},\"Item2\":{\"Line\":2,\"Column\":30}}]}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":2,\"Column\":9},\"Item2\":{\"Line\":2,\"Column\":18}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Burgers\",\"Name\":\"WalkSpace\",\"Range\":{\"Case\":\"Null\"}}]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":true,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":true,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"ShiftBurgers\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":81,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":5}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":true,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"ShiftBurgers\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":103,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":8}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":true,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"ShiftBurgers\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":78,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":3,\"Column\":17},\"Item2\":{\"Line\":3,\"Column\":26}},\"Documentation\":[\"automatically generated QsControlled specialization for Burgers.ShiftBurgers\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":true,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"ShiftBurgers\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":78,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":3,\"Column\":17},\"Item2\":{\"Line\":3,\"Column\":26}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for Burgers.ShiftBurgers\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Burgers\",\"Name\":\"CoinTossBurgers\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"BasicQuantumFunctionality\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":106,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":26}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"walkState\"]},\"Type\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Burgers\",\"Name\":\"WalkSpace\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":2,\"Column\":21},\"Item2\":{\"Line\":2,\"Column\":30}}]}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":2,\"Column\":9},\"Item2\":{\"Line\":2,\"Column\":18}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Burgers\",\"Name\":\"WalkSpace\",\"Range\":{\"Case\":\"Null\"}}]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"CoinTossBurgers\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":106,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":26}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"CoinTossBurgers\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":106,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":3,\"Column\":17},\"Item2\":{\"Line\":3,\"Column\":26}},\"Documentation\":[\"automatically generated QsAdjoint specialization for Burgers.CoinTossBurgers\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"CoinTossBurgers\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":106,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":3,\"Column\":17},\"Item2\":{\"Line\":3,\"Column\":26}},\"Documentation\":[\"automatically generated QsControlled specialization for Burgers.CoinTossBurgers\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"CoinTossBurgers\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":106,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":3,\"Column\":17},\"Item2\":{\"Line\":3,\"Column\":26}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for Burgers.CoinTossBurgers\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Burgers\",\"Name\":\"ApplyTransitionProbabilitiesBurgers\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"BasicQuantumFunctionality\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":160,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":46}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"node\"]},\"Type\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Burgers\",\"Name\":\"Node\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":2,\"Column\":16},\"Item2\":{\"Line\":2,\"Column\":20}}]}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":2,\"Column\":9},\"Item2\":{\"Line\":2,\"Column\":13}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"lambda\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":3,\"Column\":9},\"Item2\":{\"Line\":3,\"Column\":15}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"transitionProbabilityLambdaPlus\"]},\"Type\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"FixedPoint\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":4,\"Column\":43},\"Item2\":{\"Line\":4,\"Column\":53}}]}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":4,\"Column\":9},\"Item2\":{\"Line\":4,\"Column\":40}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"transitionProbabilityLambdaMinus\"]},\"Type\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"FixedPoint\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":5,\"Column\":44},\"Item2\":{\"Line\":5,\"Column\":54}}]}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":5,\"Column\":9},\"Item2\":{\"Line\":5,\"Column\":41}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"nPositions\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":6,\"Column\":9},\"Item2\":{\"Line\":6,\"Column\":19}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Burgers\",\"Name\":\"Node\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"Int\"},{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"FixedPoint\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"FixedPoint\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"ApplyTransitionProbabilitiesBurgers\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":160,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":46}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"ApplyTransitionProbabilitiesBurgers\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":160,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":7,\"Column\":16},\"Item2\":{\"Line\":7,\"Column\":25}},\"Documentation\":[\"automatically generated QsAdjoint specialization for Burgers.ApplyTransitionProbabilitiesBurgers\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"ApplyTransitionProbabilitiesBurgers\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":160,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":7,\"Column\":16},\"Item2\":{\"Line\":7,\"Column\":25}},\"Documentation\":[\"automatically generated QsControlled specialization for Burgers.ApplyTransitionProbabilitiesBurgers\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"ApplyTransitionProbabilitiesBurgers\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":160,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":7,\"Column\":16},\"Item2\":{\"Line\":7,\"Column\":25}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for Burgers.ApplyTransitionProbabilitiesBurgers\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Burgers\",\"Name\":\"ComputeSign\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"BasicQuantumFunctionality\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":190,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":22}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"littleEndianVariable\"]},\"Type\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"LittleEndian\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":2,\"Column\":32},\"Item2\":{\"Line\":2,\"Column\":44}}]}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":2,\"Column\":9},\"Item2\":{\"Line\":2,\"Column\":29}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"resultQubit\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":3,\"Column\":9},\"Item2\":{\"Line\":3,\"Column\":20}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"LittleEndian\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"Qubit\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"ComputeSign\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":190,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":22}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"ComputeSign\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":190,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":4,\"Column\":16},\"Item2\":{\"Line\":4,\"Column\":25}},\"Documentation\":[\"automatically generated QsAdjoint specialization for Burgers.ComputeSign\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"ComputeSign\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":190,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":4,\"Column\":16},\"Item2\":{\"Line\":4,\"Column\":25}},\"Documentation\":[\"automatically generated QsControlled specialization for Burgers.ComputeSign\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"ComputeSign\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":190,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":4,\"Column\":16},\"Item2\":{\"Line\":4,\"Column\":25}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for Burgers.ComputeSign\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Burgers\",\"Name\":\"IncrementDiffusiveTransition\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"BasicQuantumFunctionality\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":198,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":39}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"Nlambda\"]},\"Type\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"LittleEndian\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":2,\"Column\":19},\"Item2\":{\"Line\":2,\"Column\":31}}]}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":2,\"Column\":9},\"Item2\":{\"Line\":2,\"Column\":16}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"multiplicativeConstant\"]},\"Type\":{\"Case\":\"Double\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":3,\"Column\":9},\"Item2\":{\"Line\":3,\"Column\":31}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"transitionProbability\"]},\"Type\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"FixedPoint\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":4,\"Column\":33},\"Item2\":{\"Line\":4,\"Column\":43}}]}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":4,\"Column\":9},\"Item2\":{\"Line\":4,\"Column\":30}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"LittleEndian\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"Double\"},{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"FixedPoint\",\"Range\":{\"Case\":\"Null\"}}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"IncrementDiffusiveTransition\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":198,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":39}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"IncrementDiffusiveTransition\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":198,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":5,\"Column\":17},\"Item2\":{\"Line\":5,\"Column\":26}},\"Documentation\":[\"automatically generated QsAdjoint specialization for Burgers.IncrementDiffusiveTransition\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"IncrementDiffusiveTransition\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":198,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":5,\"Column\":17},\"Item2\":{\"Line\":5,\"Column\":26}},\"Documentation\":[\"automatically generated QsControlled specialization for Burgers.IncrementDiffusiveTransition\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"IncrementDiffusiveTransition\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":198,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":5,\"Column\":17},\"Item2\":{\"Line\":5,\"Column\":26}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for Burgers.IncrementDiffusiveTransition\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Burgers\",\"Name\":\"IncrementConvectiveTransition\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"BasicQuantumFunctionality\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":211,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":40}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"Nlambda\"]},\"Type\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"LittleEndian\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":2,\"Column\":19},\"Item2\":{\"Line\":2,\"Column\":31}}]}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":2,\"Column\":9},\"Item2\":{\"Line\":2,\"Column\":16}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"NlambdaPlusOne\"]},\"Type\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"LittleEndian\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":3,\"Column\":26},\"Item2\":{\"Line\":3,\"Column\":38}}]}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":3,\"Column\":9},\"Item2\":{\"Line\":3,\"Column\":23}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"multiplicativeConstant\"]},\"Type\":{\"Case\":\"Double\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":4,\"Column\":9},\"Item2\":{\"Line\":4,\"Column\":31}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"transitionProbability\"]},\"Type\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"FixedPoint\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":5,\"Column\":33},\"Item2\":{\"Line\":5,\"Column\":43}}]}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":5,\"Column\":9},\"Item2\":{\"Line\":5,\"Column\":30}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"LittleEndian\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"LittleEndian\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"Double\"},{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"FixedPoint\",\"Range\":{\"Case\":\"Null\"}}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"IncrementConvectiveTransition\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":211,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":40}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"IncrementConvectiveTransition\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":211,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":6,\"Column\":17},\"Item2\":{\"Line\":6,\"Column\":26}},\"Documentation\":[\"automatically generated QsAdjoint specialization for Burgers.IncrementConvectiveTransition\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"IncrementConvectiveTransition\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":211,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":6,\"Column\":17},\"Item2\":{\"Line\":6,\"Column\":26}},\"Documentation\":[\"automatically generated QsControlled specialization for Burgers.IncrementConvectiveTransition\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Burgers\",\"Name\":\"IncrementConvectiveTransition\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vivie\\\\OneDrive\\\\Documents\\\\GitHub\\\\QW_Burgers\\\\FixedTimeSteps\\\\Burgers.qs\",\"Position\":{\"Item1\":211,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":6,\"Column\":17},\"Item2\":{\"Line\":6,\"Column\":26}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for Burgers.IncrementConvectiveTransition\"]}")]
#line hidden
namespace Burgers
{
    public class WalkSpace : UDTBase<(Node,Microsoft.Quantum.Arithmetic.LittleEndian,Int64,Int64)>, IApplyData
    {
        public WalkSpace() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<(Node,Microsoft.Quantum.Arithmetic.LittleEndian,Int64,Int64)>())
        {
        }

        public WalkSpace((Node,Microsoft.Quantum.Arithmetic.LittleEndian,Int64,Int64) data) : base(data)
        {
        }

        public Node node => Data.Item1;
        public Microsoft.Quantum.Arithmetic.LittleEndian neighbor => Data.Item2;
        public Int64 nPositions => Data.Item3;
        public Int64 nVelocities => Data.Item4;
        public Node Item1 => Data.Item1;
        public Microsoft.Quantum.Arithmetic.LittleEndian Item2 => Data.Item2;
        public Int64 Item3 => Data.Item3;
        public Int64 Item4 => Data.Item4;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return Qubit.Concat(((IApplyData)Data.Item1?.Data)?.Qubits, ((IApplyData)Data.Item2?.Data)?.Qubits);
            }
        }

        public void Deconstruct(out Node item1, out Microsoft.Quantum.Arithmetic.LittleEndian item2, out Int64 item3, out Int64 item4)
        {
            item1 = Data.Item1;
            item2 = Data.Item2;
            item3 = Data.Item3;
            item4 = Data.Item4;
        }
    }

    public class Node : UDTBase<IQArray<Microsoft.Quantum.Arithmetic.LittleEndian>>, IApplyData
    {
        public Node() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<IQArray<Microsoft.Quantum.Arithmetic.LittleEndian>>())
        {
        }

        public Node(IQArray<Microsoft.Quantum.Arithmetic.LittleEndian> data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }

    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.Body, 44, 55)]
    public partial class ProjectToWalkFlatSubspace : Operation<WalkSpace, Result>, ICallable
    {
        public ProjectToWalkFlatSubspace(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "ProjectToWalkFlatSubspace";
        String ICallable.FullName => "Burgers.ProjectToWalkFlatSubspace";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary Microsoft__Quantum__Canon__ApplyControlledOnInt
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> Microsoft__Quantum__Measurement__MResetZ
        {
            get;
            set;
        }

        public override Func<WalkSpace, Result> __Body__ => (__in__) =>
        {
            var walkState = __in__;
#line 47 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var neighbor = walkState.neighbor;
#line hidden
            {
#line 48 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                var auxQubitFlagFlatSubspace = Allocate__.Apply();
#line hidden
                bool __arg1__ = true;
                try
                {
#line 49 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    Microsoft__Quantum__Canon__ApplyControlledOnInt.Apply((0L, Microsoft__Quantum__Intrinsic__X, neighbor.Data, auxQubitFlagFlatSubspace));
#line 50 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    return Microsoft__Quantum__Measurement__MResetZ.Apply(auxQubitFlagFlatSubspace);
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(auxQubitFlagFlatSubspace);
                    }
                }
            }
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Canon__ApplyControlledOnInt = this.__Factory__.Get<IUnitary>(typeof(global::Microsoft.Quantum.Canon.ApplyControlledOnInt<>));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.Microsoft__Quantum__Measurement__MResetZ = this.__Factory__.Get<ICallable<Qubit, Result>>(typeof(global::Microsoft.Quantum.Measurement.MResetZ));
        }

        public override IApplyData __DataIn__(WalkSpace data) => data;
        public override IApplyData __DataOut__(Result data) => new QTuple<Result>(data);
        public static System.Threading.Tasks.Task<Result> Run(IOperationFactory __m__, WalkSpace walkState)
        {
            return __m__.Run<ProjectToWalkFlatSubspace, WalkSpace, Result>(walkState);
        }
    }

    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.Body, 58, 62)]
    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.Adjoint, 62, 65)]
    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.Controlled, 55, 58)]
    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.ControlledAdjoint, 55, 58)]
    public partial class ReflectAboutWalkFlatSubspace : Unitary<WalkSpace>, ICallable
    {
        public ReflectAboutWalkFlatSubspace(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "ReflectAboutWalkFlatSubspace";
        String ICallable.FullName => "Burgers.ReflectAboutWalkFlatSubspace";
        protected IUnitary<(Int64,Microsoft.Quantum.Arithmetic.LittleEndian)> Microsoft__Quantum__Arithmetic__ReflectAboutInteger
        {
            get;
            set;
        }

        public override Func<WalkSpace, QVoid> __Body__ => (__in__) =>
        {
            var walkState = __in__;
#line 59 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var neighbor = walkState.neighbor;
#line 60 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            Microsoft__Quantum__Arithmetic__ReflectAboutInteger.Apply((0L, neighbor));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<WalkSpace, QVoid> __AdjointBody__ => __Body__;
        public override Func<(IQArray<Qubit>,WalkSpace), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,walkState) = __in__;
#line 55 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var neighbor = walkState.neighbor;
#line 55 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            Microsoft__Quantum__Arithmetic__ReflectAboutInteger.Controlled.Apply((__controlQubits__, (0L, neighbor)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,WalkSpace), QVoid> __ControlledAdjointBody__ => __ControlledBody__;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Arithmetic__ReflectAboutInteger = this.__Factory__.Get<IUnitary<(Int64,Microsoft.Quantum.Arithmetic.LittleEndian)>>(typeof(global::Microsoft.Quantum.Arithmetic.ReflectAboutInteger));
        }

        public override IApplyData __DataIn__(WalkSpace data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, WalkSpace walkState)
        {
            return __m__.Run<ReflectAboutWalkFlatSubspace, WalkSpace, QVoid>(walkState);
        }
    }

    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.Body, 65, 79)]
    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.Adjoint, 65, 79)]
    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.Controlled, 65, 79)]
    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.ControlledAdjoint, 65, 79)]
    public partial class WalkOperatorBurgers : Unitary<WalkSpace>, ICallable
    {
        public WalkOperatorBurgers(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "WalkOperatorBurgers";
        String ICallable.FullName => "Burgers.WalkOperatorBurgers";
        protected IUnitary<WalkSpace> CoinTossBurgers__
        {
            get;
            set;
        }

        protected IUnitary<WalkSpace> ShiftBurgers__
        {
            get;
            set;
        }

        protected IUnitary<WalkSpace> ReflectAboutWalkFlatSubspace__
        {
            get;
            set;
        }

        public override Func<WalkSpace, QVoid> __Body__ => (__in__) =>
        {
            var walkState = __in__;
#line 69 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            CoinTossBurgers__.Apply(walkState);
#line 71 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            ShiftBurgers__.Apply(walkState);
#line 65 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            CoinTossBurgers__.Adjoint.Apply(walkState);
#line 73 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            ReflectAboutWalkFlatSubspace__.Apply(walkState);
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<WalkSpace, QVoid> __AdjointBody__ => (__in__) =>
        {
            var walkState = __in__;
#line 65 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            ReflectAboutWalkFlatSubspace__.Adjoint.Apply(walkState);
#line 65 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            CoinTossBurgers__.Apply(walkState);
#line 65 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            ShiftBurgers__.Adjoint.Apply(walkState);
#line 65 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            CoinTossBurgers__.Adjoint.Apply(walkState);
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,WalkSpace), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,walkState) = __in__;
#line 65 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            CoinTossBurgers__.Apply(walkState);
#line 65 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            ShiftBurgers__.Controlled.Apply((__controlQubits__, walkState));
#line 65 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            CoinTossBurgers__.Adjoint.Apply(walkState);
#line 65 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            ReflectAboutWalkFlatSubspace__.Controlled.Apply((__controlQubits__, walkState));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,WalkSpace), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (__controlQubits__,walkState) = __in__;
#line 65 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            ReflectAboutWalkFlatSubspace__.Adjoint.Controlled.Apply((__controlQubits__, walkState));
#line 65 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            CoinTossBurgers__.Apply(walkState);
#line 65 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            ShiftBurgers__.Adjoint.Controlled.Apply((__controlQubits__, walkState));
#line 65 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            CoinTossBurgers__.Adjoint.Apply(walkState);
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.CoinTossBurgers__ = this.__Factory__.Get<IUnitary<WalkSpace>>(typeof(CoinTossBurgers));
            this.ShiftBurgers__ = this.__Factory__.Get<IUnitary<WalkSpace>>(typeof(ShiftBurgers));
            this.ReflectAboutWalkFlatSubspace__ = this.__Factory__.Get<IUnitary<WalkSpace>>(typeof(ReflectAboutWalkFlatSubspace));
        }

        public override IApplyData __DataIn__(WalkSpace data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, WalkSpace walkState)
        {
            return __m__.Run<WalkOperatorBurgers, WalkSpace, QVoid>(walkState);
        }
    }

    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.Body, 82, 104)]
    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.Adjoint, 104, 107)]
    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.Controlled, 79, 82)]
    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.ControlledAdjoint, 79, 82)]
    public partial class ShiftBurgers : Unitary<WalkSpace>, ICallable
    {
        public ShiftBurgers(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "ShiftBurgers";
        String ICallable.FullName => "Burgers.ShiftBurgers";
        protected IUnitary<(Int64,Microsoft.Quantum.Arithmetic.LittleEndian)> Microsoft__Quantum__Arithmetic__IncrementByInteger
        {
            get;
            set;
        }

        protected IUnitary Microsoft__Quantum__Canon__ApplyControlledOnInt
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected ICallable Length__
        {
            get;
            set;
        }

        public override Func<WalkSpace, QVoid> __Body__ => (__in__) =>
        {
            var walkState = __in__;
#line 83 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var (node,neighbor,nPositions,nVelocities) = walkState.Data;
#line 85 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var PlusOne = Microsoft__Quantum__Arithmetic__IncrementByInteger.Partial(new Func<Microsoft.Quantum.Arithmetic.LittleEndian, (Int64,Microsoft.Quantum.Arithmetic.LittleEndian)>((__arg1__) => (1L, __arg1__)));
#line 86 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var MinusOne = Microsoft__Quantum__Arithmetic__IncrementByInteger.Partial(new Func<Microsoft.Quantum.Arithmetic.LittleEndian, (Int64,Microsoft.Quantum.Arithmetic.LittleEndian)>((__arg2__) => (-(1L), __arg2__)));
#line 88 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            foreach (var i in new QRange(1L, nPositions))
#line hidden
            {
#line 90 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                Microsoft__Quantum__Canon__ApplyControlledOnInt.Apply((i, PlusOne, neighbor.Data, node.Data[i]));
#line 91 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                Microsoft__Quantum__Canon__ApplyControlledOnInt.Apply((i, MinusOne, neighbor.Data, node.Data[(i + 1L)]));
#line 93 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                Microsoft__Quantum__Intrinsic__X.Apply(neighbor.Data[(neighbor.Data.Length - 1L)]);
            }

#line 95 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            foreach (var i in new QRange((nPositions + 1L), (2L * nPositions)))
#line hidden
            {
#line 97 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                Microsoft__Quantum__Canon__ApplyControlledOnInt.Apply((i, MinusOne, neighbor.Data, node.Data[(i - nPositions)]));
#line 98 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                Microsoft__Quantum__Canon__ApplyControlledOnInt.Apply((i, PlusOne, neighbor.Data, node.Data[((i + 1L) - nPositions)]));
#line 100 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                Microsoft__Quantum__Intrinsic__X.Apply(neighbor.Data[(neighbor.Data.Length - 1L)]);
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<WalkSpace, QVoid> __AdjointBody__ => __Body__;
        public override Func<(IQArray<Qubit>,WalkSpace), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,walkState) = __in__;
#line 79 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var (node,neighbor,nPositions,nVelocities) = walkState.Data;
#line 79 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var PlusOne = Microsoft__Quantum__Arithmetic__IncrementByInteger.Partial(new Func<Microsoft.Quantum.Arithmetic.LittleEndian, (Int64,Microsoft.Quantum.Arithmetic.LittleEndian)>((__arg1__) => (1L, __arg1__)));
#line 79 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var MinusOne = Microsoft__Quantum__Arithmetic__IncrementByInteger.Partial(new Func<Microsoft.Quantum.Arithmetic.LittleEndian, (Int64,Microsoft.Quantum.Arithmetic.LittleEndian)>((__arg2__) => (-(1L), __arg2__)));
#line 79 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            foreach (var i in new QRange(1L, nPositions))
#line hidden
            {
#line 79 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                Microsoft__Quantum__Canon__ApplyControlledOnInt.Controlled.Apply((__controlQubits__, (i, PlusOne, neighbor.Data, node.Data[i])));
#line 79 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                Microsoft__Quantum__Canon__ApplyControlledOnInt.Controlled.Apply((__controlQubits__, (i, MinusOne, neighbor.Data, node.Data[(i + 1L)])));
#line 79 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                Microsoft__Quantum__Intrinsic__X.Controlled.Apply((__controlQubits__, neighbor.Data[(neighbor.Data.Length - 1L)]));
            }

#line 79 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            foreach (var i in new QRange((nPositions + 1L), (2L * nPositions)))
#line hidden
            {
#line 79 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                Microsoft__Quantum__Canon__ApplyControlledOnInt.Controlled.Apply((__controlQubits__, (i, MinusOne, neighbor.Data, node.Data[(i - nPositions)])));
#line 79 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                Microsoft__Quantum__Canon__ApplyControlledOnInt.Controlled.Apply((__controlQubits__, (i, PlusOne, neighbor.Data, node.Data[((i + 1L) - nPositions)])));
#line 79 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                Microsoft__Quantum__Intrinsic__X.Controlled.Apply((__controlQubits__, neighbor.Data[(neighbor.Data.Length - 1L)]));
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,WalkSpace), QVoid> __ControlledAdjointBody__ => __ControlledBody__;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Arithmetic__IncrementByInteger = this.__Factory__.Get<IUnitary<(Int64,Microsoft.Quantum.Arithmetic.LittleEndian)>>(typeof(global::Microsoft.Quantum.Arithmetic.IncrementByInteger));
            this.Microsoft__Quantum__Canon__ApplyControlledOnInt = this.__Factory__.Get<IUnitary>(typeof(global::Microsoft.Quantum.Canon.ApplyControlledOnInt<>));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
        }

        public override IApplyData __DataIn__(WalkSpace data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, WalkSpace walkState)
        {
            return __m__.Run<ShiftBurgers, WalkSpace, QVoid>(walkState);
        }
    }

    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.Body, 107, 161)]
    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.Adjoint, 107, 161)]
    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.Controlled, 107, 161)]
    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.ControlledAdjoint, 107, 161)]
    public partial class CoinTossBurgers : Unitary<WalkSpace>, ICallable
    {
        public CoinTossBurgers(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "CoinTossBurgers";
        String ICallable.FullName => "Burgers.CoinTossBurgers";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected ICallable<Double, Int64> Microsoft__Quantum__Math__Ceiling
        {
            get;
            set;
        }

        protected ICallable<Double, Double> Microsoft__Quantum__Math__Lg
        {
            get;
            set;
        }

        protected ICallable<Int64, Double> Microsoft__Quantum__Convert__IntAsDouble
        {
            get;
            set;
        }

        protected ICallable<(Int64,IQArray<Qubit>), Microsoft.Quantum.Arithmetic.FixedPoint> Microsoft__Quantum__Arithmetic__FixedPoint
        {
            get;
            set;
        }

        protected ICallable<(Int64,Int64,Int64), QRange> WalkOperations__TreeIndicesToArrayRange
        {
            get;
            set;
        }

        protected IUnitary<(Node,Int64,Microsoft.Quantum.Arithmetic.FixedPoint,Microsoft.Quantum.Arithmetic.FixedPoint,Int64)> ApplyTransitionProbabilitiesBurgers__
        {
            get;
            set;
        }

        protected IUnitary<(Int64,Int64,Int64,IQArray<Qubit>)> WalkOperations__ComputeBinaryTree
        {
            get;
            set;
        }

        protected IUnitary<(Microsoft.Quantum.Arithmetic.FixedPoint,Microsoft.Quantum.Arithmetic.FixedPoint,Microsoft.Quantum.Arithmetic.FixedPoint)> WalkOperations__DetermineAngleCircuit
        {
            get;
            set;
        }

        protected ICallable Length__
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Canon__ControlledOnInt
        {
            get;
            set;
        }

        protected IUnitary<(Pauli,Int64,Int64,Qubit)> Microsoft__Quantum__Intrinsic__RFrac
        {
            get;
            set;
        }

        protected ICallable<QRange, QRange> RangeReverse__
        {
            get;
            set;
        }

        public override Func<WalkSpace, QVoid> __Body__ => (__in__) =>
        {
            var walkState = __in__;
#line 111 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var (node,neighbor,nPositions,nVelocities) = walkState.Data;
#line 112 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var eta = 5L;
#line 113 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var nNeighbors = ((2L * nPositions) + 1L);
#line hidden
            {
#line 114 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                var transitionProbabilitiesQubits = Allocate__.Apply(((eta * nNeighbors) * 2L));
#line hidden
                bool __arg1__ = true;
                try
                {
#line 115 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var nLevels = Microsoft__Quantum__Math__Ceiling.Apply(Microsoft__Quantum__Math__Lg.Apply(Microsoft__Quantum__Convert__IntAsDouble.Apply(nNeighbors)));
#line 116 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var pointPosition = 0L;
#line 120 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    foreach (var __qsVar0__lambda__ in new QRange(0L, (nPositions - 1L)))
#line hidden
                    {
#line 122 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        var __qsVar1__transitionProbabilityLambdaPlus__ = new Microsoft.Quantum.Arithmetic.FixedPoint((pointPosition, transitionProbabilitiesQubits.Slice(WalkOperations__TreeIndicesToArrayRange.Apply(((nLevels - 1L), __qsVar0__lambda__, eta)))));
#line 124 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        var __qsVar2__transitionProbabilityLambdaMinus__ = new Microsoft.Quantum.Arithmetic.FixedPoint((pointPosition, transitionProbabilitiesQubits.Slice(WalkOperations__TreeIndicesToArrayRange.Apply(((nLevels - 1L), (__qsVar0__lambda__ - nPositions), eta)))));
#line 125 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        ApplyTransitionProbabilitiesBurgers__.Apply((node, __qsVar0__lambda__, __qsVar1__transitionProbabilityLambdaPlus__, __qsVar2__transitionProbabilityLambdaMinus__, nPositions));
                    }

#line 129 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    WalkOperations__ComputeBinaryTree.Apply((nLevels, eta, pointPosition, transitionProbabilitiesQubits));
#line 137 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    foreach (var __qsVar7__level__ in new QRange(1L, (nLevels - 1L)))
#line hidden
                    {
#line 138 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        foreach (var __qsVar8__i__ in new QRange(0L, 2L.Pow((__qsVar7__level__ - 1L))))
#line hidden
                        {
#line 139 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                            var __qsVar9__cRegister__ = (IQArray<Qubit>)transitionProbabilitiesQubits.Slice(WalkOperations__TreeIndicesToArrayRange.Apply((__qsVar7__level__, (2L * __qsVar8__i__), eta)));
#line 140 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                            var __qsVar10__c__ = new Microsoft.Quantum.Arithmetic.FixedPoint((pointPosition, __qsVar9__cRegister__));
#line 141 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                            var __qsVar11__bRegister__ = (IQArray<Qubit>)transitionProbabilitiesQubits.Slice(WalkOperations__TreeIndicesToArrayRange.Apply(((__qsVar7__level__ - 1L), __qsVar8__i__, eta)));
#line 142 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                            var __qsVar12__b__ = new Microsoft.Quantum.Arithmetic.FixedPoint((pointPosition, __qsVar11__bRegister__));
#line hidden
                            {
#line 143 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                var __qsVar13__thetaOverPiRegister__ = Allocate__.Apply(eta);
#line hidden
                                bool __arg2__ = true;
                                try
                                {
#line 144 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                    var __qsVar14__thetaOverPi__ = new Microsoft.Quantum.Arithmetic.FixedPoint((pointPosition, __qsVar13__thetaOverPiRegister__));
#line 146 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                    WalkOperations__DetermineAngleCircuit.Apply((__qsVar10__c__, __qsVar12__b__, __qsVar14__thetaOverPi__));
#line 148 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                    foreach (var __qsVar15____qsVar3__ithBitTheta____ in new QRange(0L, (__qsVar13__thetaOverPiRegister__.Length - 1L)))
#line hidden
                                    {
#line 149 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                        var __qsVar16____qsVar4__controlledRotation____ = Microsoft__Quantum__Canon__ControlledOnInt.Apply<IUnitary>((__qsVar8__i__, Microsoft__Quantum__Intrinsic__RFrac));
#line 150 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                        var __qsVar17____qsVar5__firstQubits____ = (IQArray<Qubit>)neighbor.Data.Slice(new QRange(0L, (__qsVar7__level__ - 1L)));
#line 151 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                        var __qsVar18____qsVar6__currentQubit____ = neighbor.Data[__qsVar7__level__];
#line 152 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                        __qsVar16____qsVar4__controlledRotation____.Apply((__qsVar17____qsVar5__firstQubits____, (Pauli.PauliX, 1L, 2L.Pow((__qsVar15____qsVar3__ithBitTheta____ + 1L)), __qsVar18____qsVar6__currentQubit____)));
                                    }

#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                    WalkOperations__DetermineAngleCircuit.Adjoint.Apply((__qsVar10__c__, __qsVar12__b__, __qsVar14__thetaOverPi__));
                                }
#line hidden
                                catch
                                {
                                    __arg2__ = false;
                                    throw;
                                }
#line hidden
                                finally
                                {
                                    if (__arg2__)
                                    {
#line hidden
                                        Release__.Apply(__qsVar13__thetaOverPiRegister__);
                                    }
                                }
                            }
                        }
                    }

#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    WalkOperations__ComputeBinaryTree.Adjoint.Apply((nLevels, eta, pointPosition, transitionProbabilitiesQubits));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    foreach (var __qsVar0____qsVar0__lambda____ in RangeReverse__.Apply(new QRange(0L, (nPositions - 1L))))
#line hidden
                    {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        var __qsVar1____qsVar1__transitionProbabilityLambdaPlus____ = new Microsoft.Quantum.Arithmetic.FixedPoint((pointPosition, transitionProbabilitiesQubits.Slice(WalkOperations__TreeIndicesToArrayRange.Apply(((nLevels - 1L), __qsVar0____qsVar0__lambda____, eta)))));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        var __qsVar2____qsVar2__transitionProbabilityLambdaMinus____ = new Microsoft.Quantum.Arithmetic.FixedPoint((pointPosition, transitionProbabilitiesQubits.Slice(WalkOperations__TreeIndicesToArrayRange.Apply(((nLevels - 1L), (__qsVar0____qsVar0__lambda____ - nPositions), eta)))));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        ApplyTransitionProbabilitiesBurgers__.Adjoint.Apply((node, __qsVar0____qsVar0__lambda____, __qsVar1____qsVar1__transitionProbabilityLambdaPlus____, __qsVar2____qsVar2__transitionProbabilityLambdaMinus____, nPositions));
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(transitionProbabilitiesQubits);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<WalkSpace, QVoid> __AdjointBody__ => (__in__) =>
        {
            var walkState = __in__;
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var (__qsVar0__node__,__qsVar1__neighbor__,__qsVar2__nPositions__,__qsVar3__nVelocities__) = walkState.Data;
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var __qsVar4__eta__ = 5L;
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var __qsVar5__nNeighbors__ = ((2L * __qsVar2__nPositions__) + 1L);
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                var __qsVar6__transitionProbabilitiesQubits__ = Allocate__.Apply(((__qsVar4__eta__ * __qsVar5__nNeighbors__) * 2L));
#line hidden
                bool __arg1__ = true;
                try
                {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var __qsVar7__nLevels__ = Microsoft__Quantum__Math__Ceiling.Apply(Microsoft__Quantum__Math__Lg.Apply(Microsoft__Quantum__Convert__IntAsDouble.Apply(__qsVar5__nNeighbors__)));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var __qsVar8__pointPosition__ = 0L;
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    foreach (var __qsVar0____qsVar9__lambda____ in new QRange(0L, (__qsVar2__nPositions__ - 1L)))
#line hidden
                    {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        var __qsVar1____qsVar10__transitionProbabilityLambdaPlus____ = new Microsoft.Quantum.Arithmetic.FixedPoint((__qsVar8__pointPosition__, __qsVar6__transitionProbabilitiesQubits__.Slice(WalkOperations__TreeIndicesToArrayRange.Apply(((__qsVar7__nLevels__ - 1L), __qsVar0____qsVar9__lambda____, __qsVar4__eta__)))));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        var __qsVar2____qsVar11__transitionProbabilityLambdaMinus____ = new Microsoft.Quantum.Arithmetic.FixedPoint((__qsVar8__pointPosition__, __qsVar6__transitionProbabilitiesQubits__.Slice(WalkOperations__TreeIndicesToArrayRange.Apply(((__qsVar7__nLevels__ - 1L), (__qsVar0____qsVar9__lambda____ - __qsVar2__nPositions__), __qsVar4__eta__)))));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        ApplyTransitionProbabilitiesBurgers__.Apply((__qsVar0__node__, __qsVar0____qsVar9__lambda____, __qsVar1____qsVar10__transitionProbabilityLambdaPlus____, __qsVar2____qsVar11__transitionProbabilityLambdaMinus____, __qsVar2__nPositions__));
                    }

#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    WalkOperations__ComputeBinaryTree.Apply((__qsVar7__nLevels__, __qsVar4__eta__, __qsVar8__pointPosition__, __qsVar6__transitionProbabilitiesQubits__));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    foreach (var __qsVar7____qsVar12__level____ in RangeReverse__.Apply(new QRange(1L, (__qsVar7__nLevels__ - 1L))))
#line hidden
                    {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        foreach (var __qsVar8____qsVar13__i____ in RangeReverse__.Apply(new QRange(0L, 2L.Pow((__qsVar7____qsVar12__level____ - 1L)))))
#line hidden
                        {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                            var __qsVar9____qsVar14__cRegister____ = (IQArray<Qubit>)__qsVar6__transitionProbabilitiesQubits__.Slice(WalkOperations__TreeIndicesToArrayRange.Apply((__qsVar7____qsVar12__level____, (2L * __qsVar8____qsVar13__i____), __qsVar4__eta__)));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                            var __qsVar10____qsVar15__c____ = new Microsoft.Quantum.Arithmetic.FixedPoint((__qsVar8__pointPosition__, __qsVar9____qsVar14__cRegister____));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                            var __qsVar11____qsVar16__bRegister____ = (IQArray<Qubit>)__qsVar6__transitionProbabilitiesQubits__.Slice(WalkOperations__TreeIndicesToArrayRange.Apply(((__qsVar7____qsVar12__level____ - 1L), __qsVar8____qsVar13__i____, __qsVar4__eta__)));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                            var __qsVar12____qsVar17__b____ = new Microsoft.Quantum.Arithmetic.FixedPoint((__qsVar8__pointPosition__, __qsVar11____qsVar16__bRegister____));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                            {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                var __qsVar13____qsVar18__thetaOverPiRegister____ = Allocate__.Apply(__qsVar4__eta__);
#line hidden
                                bool __arg2__ = true;
                                try
                                {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                    var __qsVar14____qsVar19__thetaOverPi____ = new Microsoft.Quantum.Arithmetic.FixedPoint((__qsVar8__pointPosition__, __qsVar13____qsVar18__thetaOverPiRegister____));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                    WalkOperations__DetermineAngleCircuit.Apply((__qsVar10____qsVar15__c____, __qsVar12____qsVar17__b____, __qsVar14____qsVar19__thetaOverPi____));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                    foreach (var __qsVar15____qsVar3____qsVar20__ithBitTheta______ in RangeReverse__.Apply(new QRange(0L, (__qsVar13____qsVar18__thetaOverPiRegister____.Length - 1L))))
#line hidden
                                    {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                        var __qsVar16____qsVar4____qsVar21__controlledRotation______ = Microsoft__Quantum__Canon__ControlledOnInt.Apply<IUnitary>((__qsVar8____qsVar13__i____, Microsoft__Quantum__Intrinsic__RFrac));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                        var __qsVar17____qsVar5____qsVar22__firstQubits______ = (IQArray<Qubit>)__qsVar1__neighbor__.Data.Slice(new QRange(0L, (__qsVar7____qsVar12__level____ - 1L)));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                        var __qsVar18____qsVar6____qsVar23__currentQubit______ = __qsVar1__neighbor__.Data[__qsVar7____qsVar12__level____];
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                        __qsVar16____qsVar4____qsVar21__controlledRotation______.Adjoint.Apply((__qsVar17____qsVar5____qsVar22__firstQubits______, (Pauli.PauliX, 1L, 2L.Pow((__qsVar15____qsVar3____qsVar20__ithBitTheta______ + 1L)), __qsVar18____qsVar6____qsVar23__currentQubit______)));
                                    }

#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                    WalkOperations__DetermineAngleCircuit.Adjoint.Apply((__qsVar10____qsVar15__c____, __qsVar12____qsVar17__b____, __qsVar14____qsVar19__thetaOverPi____));
                                }
#line hidden
                                catch
                                {
                                    __arg2__ = false;
                                    throw;
                                }
#line hidden
                                finally
                                {
                                    if (__arg2__)
                                    {
#line hidden
                                        Release__.Apply(__qsVar13____qsVar18__thetaOverPiRegister____);
                                    }
                                }
                            }
                        }
                    }

#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    WalkOperations__ComputeBinaryTree.Adjoint.Apply((__qsVar7__nLevels__, __qsVar4__eta__, __qsVar8__pointPosition__, __qsVar6__transitionProbabilitiesQubits__));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    foreach (var __qsVar0____qsVar0____qsVar9__lambda______ in RangeReverse__.Apply(new QRange(0L, (__qsVar2__nPositions__ - 1L))))
#line hidden
                    {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        var __qsVar1____qsVar1____qsVar10__transitionProbabilityLambdaPlus______ = new Microsoft.Quantum.Arithmetic.FixedPoint((__qsVar8__pointPosition__, __qsVar6__transitionProbabilitiesQubits__.Slice(WalkOperations__TreeIndicesToArrayRange.Apply(((__qsVar7__nLevels__ - 1L), __qsVar0____qsVar0____qsVar9__lambda______, __qsVar4__eta__)))));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        var __qsVar2____qsVar2____qsVar11__transitionProbabilityLambdaMinus______ = new Microsoft.Quantum.Arithmetic.FixedPoint((__qsVar8__pointPosition__, __qsVar6__transitionProbabilitiesQubits__.Slice(WalkOperations__TreeIndicesToArrayRange.Apply(((__qsVar7__nLevels__ - 1L), (__qsVar0____qsVar0____qsVar9__lambda______ - __qsVar2__nPositions__), __qsVar4__eta__)))));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        ApplyTransitionProbabilitiesBurgers__.Adjoint.Apply((__qsVar0__node__, __qsVar0____qsVar0____qsVar9__lambda______, __qsVar1____qsVar1____qsVar10__transitionProbabilityLambdaPlus______, __qsVar2____qsVar2____qsVar11__transitionProbabilityLambdaMinus______, __qsVar2__nPositions__));
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(__qsVar6__transitionProbabilitiesQubits__);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,WalkSpace), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,walkState) = __in__;
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var (node,neighbor,nPositions,nVelocities) = walkState.Data;
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var eta = 5L;
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var nNeighbors = ((2L * nPositions) + 1L);
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                var transitionProbabilitiesQubits = Allocate__.Apply(((eta * nNeighbors) * 2L));
#line hidden
                bool __arg1__ = true;
                try
                {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var nLevels = Microsoft__Quantum__Math__Ceiling.Apply(Microsoft__Quantum__Math__Lg.Apply(Microsoft__Quantum__Convert__IntAsDouble.Apply(nNeighbors)));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var pointPosition = 0L;
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    foreach (var __qsVar0__lambda__ in new QRange(0L, (nPositions - 1L)))
#line hidden
                    {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        var __qsVar1__transitionProbabilityLambdaPlus__ = new Microsoft.Quantum.Arithmetic.FixedPoint((pointPosition, transitionProbabilitiesQubits.Slice(WalkOperations__TreeIndicesToArrayRange.Apply(((nLevels - 1L), __qsVar0__lambda__, eta)))));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        var __qsVar2__transitionProbabilityLambdaMinus__ = new Microsoft.Quantum.Arithmetic.FixedPoint((pointPosition, transitionProbabilitiesQubits.Slice(WalkOperations__TreeIndicesToArrayRange.Apply(((nLevels - 1L), (__qsVar0__lambda__ - nPositions), eta)))));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        ApplyTransitionProbabilitiesBurgers__.Apply((node, __qsVar0__lambda__, __qsVar1__transitionProbabilityLambdaPlus__, __qsVar2__transitionProbabilityLambdaMinus__, nPositions));
                    }

#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    WalkOperations__ComputeBinaryTree.Apply((nLevels, eta, pointPosition, transitionProbabilitiesQubits));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    foreach (var __qsVar7__level__ in new QRange(1L, (nLevels - 1L)))
#line hidden
                    {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        foreach (var __qsVar8__i__ in new QRange(0L, 2L.Pow((__qsVar7__level__ - 1L))))
#line hidden
                        {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                            var __qsVar9__cRegister__ = (IQArray<Qubit>)transitionProbabilitiesQubits.Slice(WalkOperations__TreeIndicesToArrayRange.Apply((__qsVar7__level__, (2L * __qsVar8__i__), eta)));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                            var __qsVar10__c__ = new Microsoft.Quantum.Arithmetic.FixedPoint((pointPosition, __qsVar9__cRegister__));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                            var __qsVar11__bRegister__ = (IQArray<Qubit>)transitionProbabilitiesQubits.Slice(WalkOperations__TreeIndicesToArrayRange.Apply(((__qsVar7__level__ - 1L), __qsVar8__i__, eta)));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                            var __qsVar12__b__ = new Microsoft.Quantum.Arithmetic.FixedPoint((pointPosition, __qsVar11__bRegister__));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                            {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                var __qsVar13__thetaOverPiRegister__ = Allocate__.Apply(eta);
#line hidden
                                bool __arg2__ = true;
                                try
                                {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                    var __qsVar14__thetaOverPi__ = new Microsoft.Quantum.Arithmetic.FixedPoint((pointPosition, __qsVar13__thetaOverPiRegister__));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                    WalkOperations__DetermineAngleCircuit.Apply((__qsVar10__c__, __qsVar12__b__, __qsVar14__thetaOverPi__));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                    foreach (var __qsVar15____qsVar3__ithBitTheta____ in new QRange(0L, (__qsVar13__thetaOverPiRegister__.Length - 1L)))
#line hidden
                                    {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                        var __qsVar16____qsVar4__controlledRotation____ = Microsoft__Quantum__Canon__ControlledOnInt.Apply<IUnitary>((__qsVar8__i__, Microsoft__Quantum__Intrinsic__RFrac));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                        var __qsVar17____qsVar5__firstQubits____ = (IQArray<Qubit>)neighbor.Data.Slice(new QRange(0L, (__qsVar7__level__ - 1L)));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                        var __qsVar18____qsVar6__currentQubit____ = neighbor.Data[__qsVar7__level__];
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                        __qsVar16____qsVar4__controlledRotation____.Controlled.Apply((__controlQubits__, (__qsVar17____qsVar5__firstQubits____, (Pauli.PauliX, 1L, 2L.Pow((__qsVar15____qsVar3__ithBitTheta____ + 1L)), __qsVar18____qsVar6__currentQubit____))));
                                    }

#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                    WalkOperations__DetermineAngleCircuit.Adjoint.Apply((__qsVar10__c__, __qsVar12__b__, __qsVar14__thetaOverPi__));
                                }
#line hidden
                                catch
                                {
                                    __arg2__ = false;
                                    throw;
                                }
#line hidden
                                finally
                                {
                                    if (__arg2__)
                                    {
#line hidden
                                        Release__.Apply(__qsVar13__thetaOverPiRegister__);
                                    }
                                }
                            }
                        }
                    }

#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    WalkOperations__ComputeBinaryTree.Adjoint.Apply((nLevels, eta, pointPosition, transitionProbabilitiesQubits));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    foreach (var __qsVar0____qsVar0__lambda____ in RangeReverse__.Apply(new QRange(0L, (nPositions - 1L))))
#line hidden
                    {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        var __qsVar1____qsVar1__transitionProbabilityLambdaPlus____ = new Microsoft.Quantum.Arithmetic.FixedPoint((pointPosition, transitionProbabilitiesQubits.Slice(WalkOperations__TreeIndicesToArrayRange.Apply(((nLevels - 1L), __qsVar0____qsVar0__lambda____, eta)))));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        var __qsVar2____qsVar2__transitionProbabilityLambdaMinus____ = new Microsoft.Quantum.Arithmetic.FixedPoint((pointPosition, transitionProbabilitiesQubits.Slice(WalkOperations__TreeIndicesToArrayRange.Apply(((nLevels - 1L), (__qsVar0____qsVar0__lambda____ - nPositions), eta)))));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        ApplyTransitionProbabilitiesBurgers__.Adjoint.Apply((node, __qsVar0____qsVar0__lambda____, __qsVar1____qsVar1__transitionProbabilityLambdaPlus____, __qsVar2____qsVar2__transitionProbabilityLambdaMinus____, nPositions));
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(transitionProbabilitiesQubits);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,WalkSpace), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (__controlQubits__,walkState) = __in__;
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var (__qsVar0__node__,__qsVar1__neighbor__,__qsVar2__nPositions__,__qsVar3__nVelocities__) = walkState.Data;
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var __qsVar4__eta__ = 5L;
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var __qsVar5__nNeighbors__ = ((2L * __qsVar2__nPositions__) + 1L);
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                var __qsVar6__transitionProbabilitiesQubits__ = Allocate__.Apply(((__qsVar4__eta__ * __qsVar5__nNeighbors__) * 2L));
#line hidden
                bool __arg1__ = true;
                try
                {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var __qsVar7__nLevels__ = Microsoft__Quantum__Math__Ceiling.Apply(Microsoft__Quantum__Math__Lg.Apply(Microsoft__Quantum__Convert__IntAsDouble.Apply(__qsVar5__nNeighbors__)));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var __qsVar8__pointPosition__ = 0L;
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    foreach (var __qsVar0____qsVar9__lambda____ in new QRange(0L, (__qsVar2__nPositions__ - 1L)))
#line hidden
                    {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        var __qsVar1____qsVar10__transitionProbabilityLambdaPlus____ = new Microsoft.Quantum.Arithmetic.FixedPoint((__qsVar8__pointPosition__, __qsVar6__transitionProbabilitiesQubits__.Slice(WalkOperations__TreeIndicesToArrayRange.Apply(((__qsVar7__nLevels__ - 1L), __qsVar0____qsVar9__lambda____, __qsVar4__eta__)))));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        var __qsVar2____qsVar11__transitionProbabilityLambdaMinus____ = new Microsoft.Quantum.Arithmetic.FixedPoint((__qsVar8__pointPosition__, __qsVar6__transitionProbabilitiesQubits__.Slice(WalkOperations__TreeIndicesToArrayRange.Apply(((__qsVar7__nLevels__ - 1L), (__qsVar0____qsVar9__lambda____ - __qsVar2__nPositions__), __qsVar4__eta__)))));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        ApplyTransitionProbabilitiesBurgers__.Apply((__qsVar0__node__, __qsVar0____qsVar9__lambda____, __qsVar1____qsVar10__transitionProbabilityLambdaPlus____, __qsVar2____qsVar11__transitionProbabilityLambdaMinus____, __qsVar2__nPositions__));
                    }

#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    WalkOperations__ComputeBinaryTree.Apply((__qsVar7__nLevels__, __qsVar4__eta__, __qsVar8__pointPosition__, __qsVar6__transitionProbabilitiesQubits__));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    foreach (var __qsVar7____qsVar12__level____ in RangeReverse__.Apply(new QRange(1L, (__qsVar7__nLevels__ - 1L))))
#line hidden
                    {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        foreach (var __qsVar8____qsVar13__i____ in RangeReverse__.Apply(new QRange(0L, 2L.Pow((__qsVar7____qsVar12__level____ - 1L)))))
#line hidden
                        {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                            var __qsVar9____qsVar14__cRegister____ = (IQArray<Qubit>)__qsVar6__transitionProbabilitiesQubits__.Slice(WalkOperations__TreeIndicesToArrayRange.Apply((__qsVar7____qsVar12__level____, (2L * __qsVar8____qsVar13__i____), __qsVar4__eta__)));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                            var __qsVar10____qsVar15__c____ = new Microsoft.Quantum.Arithmetic.FixedPoint((__qsVar8__pointPosition__, __qsVar9____qsVar14__cRegister____));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                            var __qsVar11____qsVar16__bRegister____ = (IQArray<Qubit>)__qsVar6__transitionProbabilitiesQubits__.Slice(WalkOperations__TreeIndicesToArrayRange.Apply(((__qsVar7____qsVar12__level____ - 1L), __qsVar8____qsVar13__i____, __qsVar4__eta__)));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                            var __qsVar12____qsVar17__b____ = new Microsoft.Quantum.Arithmetic.FixedPoint((__qsVar8__pointPosition__, __qsVar11____qsVar16__bRegister____));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                            {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                var __qsVar13____qsVar18__thetaOverPiRegister____ = Allocate__.Apply(__qsVar4__eta__);
#line hidden
                                bool __arg2__ = true;
                                try
                                {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                    var __qsVar14____qsVar19__thetaOverPi____ = new Microsoft.Quantum.Arithmetic.FixedPoint((__qsVar8__pointPosition__, __qsVar13____qsVar18__thetaOverPiRegister____));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                    WalkOperations__DetermineAngleCircuit.Apply((__qsVar10____qsVar15__c____, __qsVar12____qsVar17__b____, __qsVar14____qsVar19__thetaOverPi____));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                    foreach (var __qsVar15____qsVar3____qsVar20__ithBitTheta______ in RangeReverse__.Apply(new QRange(0L, (__qsVar13____qsVar18__thetaOverPiRegister____.Length - 1L))))
#line hidden
                                    {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                        var __qsVar16____qsVar4____qsVar21__controlledRotation______ = Microsoft__Quantum__Canon__ControlledOnInt.Apply<IUnitary>((__qsVar8____qsVar13__i____, Microsoft__Quantum__Intrinsic__RFrac));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                        var __qsVar17____qsVar5____qsVar22__firstQubits______ = (IQArray<Qubit>)__qsVar1__neighbor__.Data.Slice(new QRange(0L, (__qsVar7____qsVar12__level____ - 1L)));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                        var __qsVar18____qsVar6____qsVar23__currentQubit______ = __qsVar1__neighbor__.Data[__qsVar7____qsVar12__level____];
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                        __qsVar16____qsVar4____qsVar21__controlledRotation______.Adjoint.Controlled.Apply((__controlQubits__, (__qsVar17____qsVar5____qsVar22__firstQubits______, (Pauli.PauliX, 1L, 2L.Pow((__qsVar15____qsVar3____qsVar20__ithBitTheta______ + 1L)), __qsVar18____qsVar6____qsVar23__currentQubit______))));
                                    }

#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                                    WalkOperations__DetermineAngleCircuit.Adjoint.Apply((__qsVar10____qsVar15__c____, __qsVar12____qsVar17__b____, __qsVar14____qsVar19__thetaOverPi____));
                                }
#line hidden
                                catch
                                {
                                    __arg2__ = false;
                                    throw;
                                }
#line hidden
                                finally
                                {
                                    if (__arg2__)
                                    {
#line hidden
                                        Release__.Apply(__qsVar13____qsVar18__thetaOverPiRegister____);
                                    }
                                }
                            }
                        }
                    }

#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    WalkOperations__ComputeBinaryTree.Adjoint.Apply((__qsVar7__nLevels__, __qsVar4__eta__, __qsVar8__pointPosition__, __qsVar6__transitionProbabilitiesQubits__));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    foreach (var __qsVar0____qsVar0____qsVar9__lambda______ in RangeReverse__.Apply(new QRange(0L, (__qsVar2__nPositions__ - 1L))))
#line hidden
                    {
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        var __qsVar1____qsVar1____qsVar10__transitionProbabilityLambdaPlus______ = new Microsoft.Quantum.Arithmetic.FixedPoint((__qsVar8__pointPosition__, __qsVar6__transitionProbabilitiesQubits__.Slice(WalkOperations__TreeIndicesToArrayRange.Apply(((__qsVar7__nLevels__ - 1L), __qsVar0____qsVar0____qsVar9__lambda______, __qsVar4__eta__)))));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        var __qsVar2____qsVar2____qsVar11__transitionProbabilityLambdaMinus______ = new Microsoft.Quantum.Arithmetic.FixedPoint((__qsVar8__pointPosition__, __qsVar6__transitionProbabilitiesQubits__.Slice(WalkOperations__TreeIndicesToArrayRange.Apply(((__qsVar7__nLevels__ - 1L), (__qsVar0____qsVar0____qsVar9__lambda______ - __qsVar2__nPositions__), __qsVar4__eta__)))));
#line 107 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                        ApplyTransitionProbabilitiesBurgers__.Adjoint.Apply((__qsVar0__node__, __qsVar0____qsVar0____qsVar9__lambda______, __qsVar1____qsVar1____qsVar10__transitionProbabilityLambdaPlus______, __qsVar2____qsVar2____qsVar11__transitionProbabilityLambdaMinus______, __qsVar2__nPositions__));
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(__qsVar6__transitionProbabilitiesQubits__);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Math__Ceiling = this.__Factory__.Get<ICallable<Double, Int64>>(typeof(global::Microsoft.Quantum.Math.Ceiling));
            this.Microsoft__Quantum__Math__Lg = this.__Factory__.Get<ICallable<Double, Double>>(typeof(global::Microsoft.Quantum.Math.Lg));
            this.Microsoft__Quantum__Convert__IntAsDouble = this.__Factory__.Get<ICallable<Int64, Double>>(typeof(global::Microsoft.Quantum.Convert.IntAsDouble));
            this.Microsoft__Quantum__Arithmetic__FixedPoint = this.__Factory__.Get<ICallable<(Int64,IQArray<Qubit>), Microsoft.Quantum.Arithmetic.FixedPoint>>(typeof(global::Microsoft.Quantum.Arithmetic.FixedPoint));
            this.WalkOperations__TreeIndicesToArrayRange = this.__Factory__.Get<ICallable<(Int64,Int64,Int64), QRange>>(typeof(global::WalkOperations.TreeIndicesToArrayRange));
            this.ApplyTransitionProbabilitiesBurgers__ = this.__Factory__.Get<IUnitary<(Node,Int64,Microsoft.Quantum.Arithmetic.FixedPoint,Microsoft.Quantum.Arithmetic.FixedPoint,Int64)>>(typeof(ApplyTransitionProbabilitiesBurgers));
            this.WalkOperations__ComputeBinaryTree = this.__Factory__.Get<IUnitary<(Int64,Int64,Int64,IQArray<Qubit>)>>(typeof(global::WalkOperations.ComputeBinaryTree));
            this.WalkOperations__DetermineAngleCircuit = this.__Factory__.Get<IUnitary<(Microsoft.Quantum.Arithmetic.FixedPoint,Microsoft.Quantum.Arithmetic.FixedPoint,Microsoft.Quantum.Arithmetic.FixedPoint)>>(typeof(global::WalkOperations.DetermineAngleCircuit));
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.Microsoft__Quantum__Canon__ControlledOnInt = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Canon.ControlledOnInt<>));
            this.Microsoft__Quantum__Intrinsic__RFrac = this.__Factory__.Get<IUnitary<(Pauli,Int64,Int64,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.RFrac));
            this.RangeReverse__ = this.__Factory__.Get<ICallable<QRange, QRange>>(typeof(global::Microsoft.Quantum.Core.RangeReverse));
        }

        public override IApplyData __DataIn__(WalkSpace data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, WalkSpace walkState)
        {
            return __m__.Run<CoinTossBurgers, WalkSpace, QVoid>(walkState);
        }
    }

    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.Body, 161, 191)]
    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.Adjoint, 161, 191)]
    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.Controlled, 161, 191)]
    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.ControlledAdjoint, 161, 191)]
    public partial class ApplyTransitionProbabilitiesBurgers : Unitary<(Node,Int64,Microsoft.Quantum.Arithmetic.FixedPoint,Microsoft.Quantum.Arithmetic.FixedPoint,Int64)>, ICallable
    {
        public ApplyTransitionProbabilitiesBurgers(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Node,Int64,Microsoft.Quantum.Arithmetic.FixedPoint,Microsoft.Quantum.Arithmetic.FixedPoint,Int64)>, IApplyData
        {
            public In((Node,Int64,Microsoft.Quantum.Arithmetic.FixedPoint,Microsoft.Quantum.Arithmetic.FixedPoint,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item1?.Data)?.Qubits, ((IApplyData)Data.Item3?.Data.Item2)?.Qubits, ((IApplyData)Data.Item4?.Data.Item2)?.Qubits);
                }
            }
        }

        String ICallable.Name => "ApplyTransitionProbabilitiesBurgers";
        String ICallable.FullName => "Burgers.ApplyTransitionProbabilitiesBurgers";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<(Microsoft.Quantum.Arithmetic.LittleEndian,Qubit)> ComputeSign__
        {
            get;
            set;
        }

        protected IUnitary<(Microsoft.Quantum.Arithmetic.LittleEndian,Double,Microsoft.Quantum.Arithmetic.FixedPoint)> IncrementDiffusiveTransition__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected IUnitary<(Microsoft.Quantum.Arithmetic.LittleEndian,Microsoft.Quantum.Arithmetic.LittleEndian,Double,Microsoft.Quantum.Arithmetic.FixedPoint)> IncrementConvectiveTransition__
        {
            get;
            set;
        }

        public override Func<(Node,Int64,Microsoft.Quantum.Arithmetic.FixedPoint,Microsoft.Quantum.Arithmetic.FixedPoint,Int64), QVoid> __Body__ => (__in__) =>
        {
            var (node,lambda,transitionProbabilityLambdaPlus,transitionProbabilityLambdaMinus,nPositions) = __in__;
#line 168 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var nu = 1D;
#line 169 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var deltaL = 1D;
#line 170 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var deltaU = 1D;
#line 171 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var diffusiveConstant = (nu / (deltaL * deltaL));
#line 172 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var convectiveConstant = (deltaU / (4D * deltaL));
#line hidden
            {
#line 174 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                var signAuxiliaryQubit = Allocate__.Apply();
#line hidden
                bool __arg1__ = true;
                try
                {
#line 176 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var Nlambda = node.Data[lambda];
#line 177 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var NlambdaPlusOne = node.Data[(lambda + 1L)];
#line 178 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    ComputeSign__.Apply((Nlambda, signAuxiliaryQubit));
#line 181 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    IncrementDiffusiveTransition__.Controlled.Apply((new QArray<Qubit>(signAuxiliaryQubit), (Nlambda, diffusiveConstant, transitionProbabilityLambdaMinus)));
#line 182 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    IncrementDiffusiveTransition__.Controlled.Apply((new QArray<Qubit>(signAuxiliaryQubit), (Nlambda, diffusiveConstant, transitionProbabilityLambdaMinus)));
#line 183 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    Microsoft__Quantum__Intrinsic__X.Apply(signAuxiliaryQubit);
#line 185 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    IncrementDiffusiveTransition__.Controlled.Apply((new QArray<Qubit>(signAuxiliaryQubit), (Nlambda, diffusiveConstant, transitionProbabilityLambdaPlus)));
#line 186 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    IncrementDiffusiveTransition__.Controlled.Apply((new QArray<Qubit>(signAuxiliaryQubit), (Nlambda, diffusiveConstant, transitionProbabilityLambdaPlus)));
#line 188 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    IncrementConvectiveTransition__.Apply((Nlambda, NlambdaPlusOne, convectiveConstant, transitionProbabilityLambdaMinus));
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(signAuxiliaryQubit);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(Node,Int64,Microsoft.Quantum.Arithmetic.FixedPoint,Microsoft.Quantum.Arithmetic.FixedPoint,Int64), QVoid> __AdjointBody__ => (__in__) =>
        {
            var (node,lambda,transitionProbabilityLambdaPlus,transitionProbabilityLambdaMinus,nPositions) = __in__;
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var __qsVar0__nu__ = 1D;
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var __qsVar1__deltaL__ = 1D;
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var __qsVar2__deltaU__ = 1D;
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var __qsVar3__diffusiveConstant__ = (__qsVar0__nu__ / (__qsVar1__deltaL__ * __qsVar1__deltaL__));
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var __qsVar4__convectiveConstant__ = (__qsVar2__deltaU__ / (4D * __qsVar1__deltaL__));
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            {
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                var __qsVar5__signAuxiliaryQubit__ = Allocate__.Apply();
#line hidden
                bool __arg1__ = true;
                try
                {
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var __qsVar6__Nlambda__ = node.Data[lambda];
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var __qsVar7__NlambdaPlusOne__ = node.Data[(lambda + 1L)];
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    IncrementConvectiveTransition__.Adjoint.Apply((__qsVar6__Nlambda__, __qsVar7__NlambdaPlusOne__, __qsVar4__convectiveConstant__, transitionProbabilityLambdaMinus));
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    IncrementDiffusiveTransition__.Controlled.Adjoint.Apply((new QArray<Qubit>(__qsVar5__signAuxiliaryQubit__), (__qsVar6__Nlambda__, __qsVar3__diffusiveConstant__, transitionProbabilityLambdaPlus)));
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    IncrementDiffusiveTransition__.Controlled.Adjoint.Apply((new QArray<Qubit>(__qsVar5__signAuxiliaryQubit__), (__qsVar6__Nlambda__, __qsVar3__diffusiveConstant__, transitionProbabilityLambdaPlus)));
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    Microsoft__Quantum__Intrinsic__X.Adjoint.Apply(__qsVar5__signAuxiliaryQubit__);
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    IncrementDiffusiveTransition__.Controlled.Adjoint.Apply((new QArray<Qubit>(__qsVar5__signAuxiliaryQubit__), (__qsVar6__Nlambda__, __qsVar3__diffusiveConstant__, transitionProbabilityLambdaMinus)));
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    IncrementDiffusiveTransition__.Controlled.Adjoint.Apply((new QArray<Qubit>(__qsVar5__signAuxiliaryQubit__), (__qsVar6__Nlambda__, __qsVar3__diffusiveConstant__, transitionProbabilityLambdaMinus)));
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    ComputeSign__.Adjoint.Apply((__qsVar6__Nlambda__, __qsVar5__signAuxiliaryQubit__));
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(__qsVar5__signAuxiliaryQubit__);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Node,Int64,Microsoft.Quantum.Arithmetic.FixedPoint,Microsoft.Quantum.Arithmetic.FixedPoint,Int64)), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,(node,lambda,transitionProbabilityLambdaPlus,transitionProbabilityLambdaMinus,nPositions)) = __in__;
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var nu = 1D;
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var deltaL = 1D;
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var deltaU = 1D;
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var diffusiveConstant = (nu / (deltaL * deltaL));
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var convectiveConstant = (deltaU / (4D * deltaL));
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            {
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                var signAuxiliaryQubit = Allocate__.Apply();
#line hidden
                bool __arg1__ = true;
                try
                {
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var Nlambda = node.Data[lambda];
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var NlambdaPlusOne = node.Data[(lambda + 1L)];
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    ComputeSign__.Controlled.Apply((__controlQubits__, (Nlambda, signAuxiliaryQubit)));
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    IncrementDiffusiveTransition__.Controlled.Controlled.Apply((__controlQubits__, (new QArray<Qubit>(signAuxiliaryQubit), (Nlambda, diffusiveConstant, transitionProbabilityLambdaMinus))));
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    IncrementDiffusiveTransition__.Controlled.Controlled.Apply((__controlQubits__, (new QArray<Qubit>(signAuxiliaryQubit), (Nlambda, diffusiveConstant, transitionProbabilityLambdaMinus))));
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    Microsoft__Quantum__Intrinsic__X.Controlled.Apply((__controlQubits__, signAuxiliaryQubit));
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    IncrementDiffusiveTransition__.Controlled.Controlled.Apply((__controlQubits__, (new QArray<Qubit>(signAuxiliaryQubit), (Nlambda, diffusiveConstant, transitionProbabilityLambdaPlus))));
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    IncrementDiffusiveTransition__.Controlled.Controlled.Apply((__controlQubits__, (new QArray<Qubit>(signAuxiliaryQubit), (Nlambda, diffusiveConstant, transitionProbabilityLambdaPlus))));
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    IncrementConvectiveTransition__.Controlled.Apply((__controlQubits__, (Nlambda, NlambdaPlusOne, convectiveConstant, transitionProbabilityLambdaMinus)));
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(signAuxiliaryQubit);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Node,Int64,Microsoft.Quantum.Arithmetic.FixedPoint,Microsoft.Quantum.Arithmetic.FixedPoint,Int64)), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (__controlQubits__,(node,lambda,transitionProbabilityLambdaPlus,transitionProbabilityLambdaMinus,nPositions)) = __in__;
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var __qsVar0__nu__ = 1D;
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var __qsVar1__deltaL__ = 1D;
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var __qsVar2__deltaU__ = 1D;
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var __qsVar3__diffusiveConstant__ = (__qsVar0__nu__ / (__qsVar1__deltaL__ * __qsVar1__deltaL__));
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var __qsVar4__convectiveConstant__ = (__qsVar2__deltaU__ / (4D * __qsVar1__deltaL__));
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            {
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                var __qsVar5__signAuxiliaryQubit__ = Allocate__.Apply();
#line hidden
                bool __arg1__ = true;
                try
                {
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var __qsVar6__Nlambda__ = node.Data[lambda];
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var __qsVar7__NlambdaPlusOne__ = node.Data[(lambda + 1L)];
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    IncrementConvectiveTransition__.Adjoint.Controlled.Apply((__controlQubits__, (__qsVar6__Nlambda__, __qsVar7__NlambdaPlusOne__, __qsVar4__convectiveConstant__, transitionProbabilityLambdaMinus)));
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    IncrementDiffusiveTransition__.Controlled.Adjoint.Controlled.Apply((__controlQubits__, (new QArray<Qubit>(__qsVar5__signAuxiliaryQubit__), (__qsVar6__Nlambda__, __qsVar3__diffusiveConstant__, transitionProbabilityLambdaPlus))));
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    IncrementDiffusiveTransition__.Controlled.Adjoint.Controlled.Apply((__controlQubits__, (new QArray<Qubit>(__qsVar5__signAuxiliaryQubit__), (__qsVar6__Nlambda__, __qsVar3__diffusiveConstant__, transitionProbabilityLambdaPlus))));
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    Microsoft__Quantum__Intrinsic__X.Adjoint.Controlled.Apply((__controlQubits__, __qsVar5__signAuxiliaryQubit__));
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    IncrementDiffusiveTransition__.Controlled.Adjoint.Controlled.Apply((__controlQubits__, (new QArray<Qubit>(__qsVar5__signAuxiliaryQubit__), (__qsVar6__Nlambda__, __qsVar3__diffusiveConstant__, transitionProbabilityLambdaMinus))));
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    IncrementDiffusiveTransition__.Controlled.Adjoint.Controlled.Apply((__controlQubits__, (new QArray<Qubit>(__qsVar5__signAuxiliaryQubit__), (__qsVar6__Nlambda__, __qsVar3__diffusiveConstant__, transitionProbabilityLambdaMinus))));
#line 161 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    ComputeSign__.Adjoint.Controlled.Apply((__controlQubits__, (__qsVar6__Nlambda__, __qsVar5__signAuxiliaryQubit__)));
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(__qsVar5__signAuxiliaryQubit__);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.ComputeSign__ = this.__Factory__.Get<IUnitary<(Microsoft.Quantum.Arithmetic.LittleEndian,Qubit)>>(typeof(ComputeSign));
            this.IncrementDiffusiveTransition__ = this.__Factory__.Get<IUnitary<(Microsoft.Quantum.Arithmetic.LittleEndian,Double,Microsoft.Quantum.Arithmetic.FixedPoint)>>(typeof(IncrementDiffusiveTransition));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.IncrementConvectiveTransition__ = this.__Factory__.Get<IUnitary<(Microsoft.Quantum.Arithmetic.LittleEndian,Microsoft.Quantum.Arithmetic.LittleEndian,Double,Microsoft.Quantum.Arithmetic.FixedPoint)>>(typeof(IncrementConvectiveTransition));
        }

        public override IApplyData __DataIn__((Node,Int64,Microsoft.Quantum.Arithmetic.FixedPoint,Microsoft.Quantum.Arithmetic.FixedPoint,Int64) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Node node, Int64 lambda, Microsoft.Quantum.Arithmetic.FixedPoint transitionProbabilityLambdaPlus, Microsoft.Quantum.Arithmetic.FixedPoint transitionProbabilityLambdaMinus, Int64 nPositions)
        {
            return __m__.Run<ApplyTransitionProbabilitiesBurgers, (Node,Int64,Microsoft.Quantum.Arithmetic.FixedPoint,Microsoft.Quantum.Arithmetic.FixedPoint,Int64), QVoid>((node, lambda, transitionProbabilityLambdaPlus, transitionProbabilityLambdaMinus, nPositions));
        }
    }

    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.Body, 191, 199)]
    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.Adjoint, 191, 199)]
    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.Controlled, 191, 199)]
    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.ControlledAdjoint, 191, 199)]
    public partial class ComputeSign : Unitary<(Microsoft.Quantum.Arithmetic.LittleEndian,Qubit)>, ICallable
    {
        public ComputeSign(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Microsoft.Quantum.Arithmetic.LittleEndian,Qubit)>, IApplyData
        {
            public In((Microsoft.Quantum.Arithmetic.LittleEndian,Qubit) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item1?.Data)?.Qubits, ((IApplyData)Data.Item2)?.Qubits);
                }
            }
        }

        String ICallable.Name => "ComputeSign";
        String ICallable.FullName => "Burgers.ComputeSign";
        protected IUnitary<(Qubit,Qubit)> Microsoft__Quantum__Intrinsic__CNOT
        {
            get;
            set;
        }

        public override Func<(Microsoft.Quantum.Arithmetic.LittleEndian,Qubit), QVoid> __Body__ => (__in__) =>
        {
            var (littleEndianVariable,resultQubit) = __in__;
#line 195 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var qubitRegister = (IQArray<Qubit>)littleEndianVariable.Data;
#line 196 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Apply((qubitRegister[0L], resultQubit));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(Microsoft.Quantum.Arithmetic.LittleEndian,Qubit), QVoid> __AdjointBody__ => (__in__) =>
        {
            var (littleEndianVariable,resultQubit) = __in__;
#line 191 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var __qsVar0__qubitRegister__ = (IQArray<Qubit>)littleEndianVariable.Data;
#line 191 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Adjoint.Apply((__qsVar0__qubitRegister__[0L], resultQubit));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Microsoft.Quantum.Arithmetic.LittleEndian,Qubit)), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,(littleEndianVariable,resultQubit)) = __in__;
#line 191 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var qubitRegister = (IQArray<Qubit>)littleEndianVariable.Data;
#line 191 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Controlled.Apply((__controlQubits__, (qubitRegister[0L], resultQubit)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Microsoft.Quantum.Arithmetic.LittleEndian,Qubit)), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (__controlQubits__,(littleEndianVariable,resultQubit)) = __in__;
#line 191 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var __qsVar0__qubitRegister__ = (IQArray<Qubit>)littleEndianVariable.Data;
#line 191 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Adjoint.Controlled.Apply((__controlQubits__, (__qsVar0__qubitRegister__[0L], resultQubit)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Intrinsic__CNOT = this.__Factory__.Get<IUnitary<(Qubit,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.CNOT));
        }

        public override IApplyData __DataIn__((Microsoft.Quantum.Arithmetic.LittleEndian,Qubit) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Microsoft.Quantum.Arithmetic.LittleEndian littleEndianVariable, Qubit resultQubit)
        {
            return __m__.Run<ComputeSign, (Microsoft.Quantum.Arithmetic.LittleEndian,Qubit), QVoid>((littleEndianVariable, resultQubit));
        }
    }

    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.Body, 199, 212)]
    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.Adjoint, 199, 212)]
    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.Controlled, 199, 212)]
    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.ControlledAdjoint, 199, 212)]
    public partial class IncrementDiffusiveTransition : Unitary<(Microsoft.Quantum.Arithmetic.LittleEndian,Double,Microsoft.Quantum.Arithmetic.FixedPoint)>, ICallable
    {
        public IncrementDiffusiveTransition(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Microsoft.Quantum.Arithmetic.LittleEndian,Double,Microsoft.Quantum.Arithmetic.FixedPoint)>, IApplyData
        {
            public In((Microsoft.Quantum.Arithmetic.LittleEndian,Double,Microsoft.Quantum.Arithmetic.FixedPoint) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item1?.Data)?.Qubits, ((IApplyData)Data.Item3?.Data.Item2)?.Qubits);
                }
            }
        }

        String ICallable.Name => "IncrementDiffusiveTransition";
        String ICallable.FullName => "Burgers.IncrementDiffusiveTransition";
        protected ICallable<(Int64,IQArray<Qubit>), Microsoft.Quantum.Arithmetic.FixedPoint> Microsoft__Quantum__Arithmetic__FixedPoint
        {
            get;
            set;
        }

        protected IUnitary<(Double,Microsoft.Quantum.Arithmetic.FixedPoint)> ArithmeticOperations__MultiplyConstantFxPInPlace
        {
            get;
            set;
        }

        protected IUnitary<(Microsoft.Quantum.Arithmetic.FixedPoint,Microsoft.Quantum.Arithmetic.FixedPoint)> Microsoft__Quantum__Arithmetic__AddFxP
        {
            get;
            set;
        }

        public override Func<(Microsoft.Quantum.Arithmetic.LittleEndian,Double,Microsoft.Quantum.Arithmetic.FixedPoint), QVoid> __Body__ => (__in__) =>
        {
            var (Nlambda,multiplicativeConstant,transitionProbability) = __in__;
#line 204 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var NlambdaFxP = new Microsoft.Quantum.Arithmetic.FixedPoint((0L, Nlambda.Data));
#line 206 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            ArithmeticOperations__MultiplyConstantFxPInPlace.Apply((multiplicativeConstant, NlambdaFxP));
#line 208 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            Microsoft__Quantum__Arithmetic__AddFxP.Apply((NlambdaFxP, transitionProbability));
#line 199 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            ArithmeticOperations__MultiplyConstantFxPInPlace.Adjoint.Apply((multiplicativeConstant, NlambdaFxP));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(Microsoft.Quantum.Arithmetic.LittleEndian,Double,Microsoft.Quantum.Arithmetic.FixedPoint), QVoid> __AdjointBody__ => (__in__) =>
        {
            var (Nlambda,multiplicativeConstant,transitionProbability) = __in__;
#line 199 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var __qsVar0__NlambdaFxP__ = new Microsoft.Quantum.Arithmetic.FixedPoint((0L, Nlambda.Data));
#line 199 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            ArithmeticOperations__MultiplyConstantFxPInPlace.Apply((multiplicativeConstant, __qsVar0__NlambdaFxP__));
#line 199 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            Microsoft__Quantum__Arithmetic__AddFxP.Adjoint.Apply((__qsVar0__NlambdaFxP__, transitionProbability));
#line 199 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            ArithmeticOperations__MultiplyConstantFxPInPlace.Adjoint.Apply((multiplicativeConstant, __qsVar0__NlambdaFxP__));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Microsoft.Quantum.Arithmetic.LittleEndian,Double,Microsoft.Quantum.Arithmetic.FixedPoint)), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,(Nlambda,multiplicativeConstant,transitionProbability)) = __in__;
#line 199 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var NlambdaFxP = new Microsoft.Quantum.Arithmetic.FixedPoint((0L, Nlambda.Data));
#line 199 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            ArithmeticOperations__MultiplyConstantFxPInPlace.Apply((multiplicativeConstant, NlambdaFxP));
#line 199 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            Microsoft__Quantum__Arithmetic__AddFxP.Controlled.Apply((__controlQubits__, (NlambdaFxP, transitionProbability)));
#line 199 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            ArithmeticOperations__MultiplyConstantFxPInPlace.Adjoint.Apply((multiplicativeConstant, NlambdaFxP));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Microsoft.Quantum.Arithmetic.LittleEndian,Double,Microsoft.Quantum.Arithmetic.FixedPoint)), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (__controlQubits__,(Nlambda,multiplicativeConstant,transitionProbability)) = __in__;
#line 199 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var __qsVar0__NlambdaFxP__ = new Microsoft.Quantum.Arithmetic.FixedPoint((0L, Nlambda.Data));
#line 199 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            ArithmeticOperations__MultiplyConstantFxPInPlace.Apply((multiplicativeConstant, __qsVar0__NlambdaFxP__));
#line 199 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            Microsoft__Quantum__Arithmetic__AddFxP.Adjoint.Controlled.Apply((__controlQubits__, (__qsVar0__NlambdaFxP__, transitionProbability)));
#line 199 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            ArithmeticOperations__MultiplyConstantFxPInPlace.Adjoint.Apply((multiplicativeConstant, __qsVar0__NlambdaFxP__));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Arithmetic__FixedPoint = this.__Factory__.Get<ICallable<(Int64,IQArray<Qubit>), Microsoft.Quantum.Arithmetic.FixedPoint>>(typeof(global::Microsoft.Quantum.Arithmetic.FixedPoint));
            this.ArithmeticOperations__MultiplyConstantFxPInPlace = this.__Factory__.Get<IUnitary<(Double,Microsoft.Quantum.Arithmetic.FixedPoint)>>(typeof(global::ArithmeticOperations.MultiplyConstantFxPInPlace));
            this.Microsoft__Quantum__Arithmetic__AddFxP = this.__Factory__.Get<IUnitary<(Microsoft.Quantum.Arithmetic.FixedPoint,Microsoft.Quantum.Arithmetic.FixedPoint)>>(typeof(global::Microsoft.Quantum.Arithmetic.AddFxP));
        }

        public override IApplyData __DataIn__((Microsoft.Quantum.Arithmetic.LittleEndian,Double,Microsoft.Quantum.Arithmetic.FixedPoint) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Microsoft.Quantum.Arithmetic.LittleEndian Nlambda, Double multiplicativeConstant, Microsoft.Quantum.Arithmetic.FixedPoint transitionProbability)
        {
            return __m__.Run<IncrementDiffusiveTransition, (Microsoft.Quantum.Arithmetic.LittleEndian,Double,Microsoft.Quantum.Arithmetic.FixedPoint), QVoid>((Nlambda, multiplicativeConstant, transitionProbability));
        }
    }

    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.Body, 212, -1)]
    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.Adjoint, 212, -1)]
    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.Controlled, 212, -1)]
    [SourceLocation("C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs", OperationFunctor.ControlledAdjoint, 212, -1)]
    public partial class IncrementConvectiveTransition : Unitary<(Microsoft.Quantum.Arithmetic.LittleEndian,Microsoft.Quantum.Arithmetic.LittleEndian,Double,Microsoft.Quantum.Arithmetic.FixedPoint)>, ICallable
    {
        public IncrementConvectiveTransition(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Microsoft.Quantum.Arithmetic.LittleEndian,Microsoft.Quantum.Arithmetic.LittleEndian,Double,Microsoft.Quantum.Arithmetic.FixedPoint)>, IApplyData
        {
            public In((Microsoft.Quantum.Arithmetic.LittleEndian,Microsoft.Quantum.Arithmetic.LittleEndian,Double,Microsoft.Quantum.Arithmetic.FixedPoint) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item1?.Data)?.Qubits, ((IApplyData)Data.Item2?.Data)?.Qubits, ((IApplyData)Data.Item4?.Data.Item2)?.Qubits);
                }
            }
        }

        String ICallable.Name => "IncrementConvectiveTransition";
        String ICallable.FullName => "Burgers.IncrementConvectiveTransition";
        protected ICallable Length__
        {
            get;
            set;
        }

        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected ICallable<(Int64,IQArray<Qubit>), Microsoft.Quantum.Arithmetic.FixedPoint> Microsoft__Quantum__Arithmetic__FixedPoint
        {
            get;
            set;
        }

        protected IUnitary<(Microsoft.Quantum.Arithmetic.FixedPoint,Microsoft.Quantum.Arithmetic.FixedPoint)> Microsoft__Quantum__Arithmetic__SquareFxP
        {
            get;
            set;
        }

        protected IUnitary<(Double,Microsoft.Quantum.Arithmetic.FixedPoint)> ArithmeticOperations__MultiplyConstantFxPInPlace
        {
            get;
            set;
        }

        protected IUnitary<(Microsoft.Quantum.Arithmetic.FixedPoint,Microsoft.Quantum.Arithmetic.FixedPoint)> Microsoft__Quantum__Arithmetic__AddFxP
        {
            get;
            set;
        }

        public override Func<(Microsoft.Quantum.Arithmetic.LittleEndian,Microsoft.Quantum.Arithmetic.LittleEndian,Double,Microsoft.Quantum.Arithmetic.FixedPoint), QVoid> __Body__ => (__in__) =>
        {
            var (Nlambda,NlambdaPlusOne,multiplicativeConstant,transitionProbability) = __in__;
#line 218 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var (pointPosition,transitionProbabilityQubitRegister) = ((Int64,IQArray<Qubit>))transitionProbability.Data;
#line 219 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var nQubits = transitionProbabilityQubitRegister.Length;
#line hidden
            {
#line 220 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                var additionalTransitionProbabilityQubitRegister = Allocate__.Apply(nQubits);
#line hidden
                bool __arg1__ = true;
                try
                {
#line 221 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var additionalTransitionProbability = new Microsoft.Quantum.Arithmetic.FixedPoint((pointPosition, additionalTransitionProbabilityQubitRegister));
#line 223 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var __qsVar0__NlambdaFxP__ = new Microsoft.Quantum.Arithmetic.FixedPoint((0L, Nlambda.Data));
#line 224 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var __qsVar1__NlambdaPlusOneFxP__ = new Microsoft.Quantum.Arithmetic.FixedPoint((0L, NlambdaPlusOne.Data));
#line 225 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    Microsoft__Quantum__Arithmetic__SquareFxP.Apply((__qsVar0__NlambdaFxP__, additionalTransitionProbability));
#line 226 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    Microsoft__Quantum__Arithmetic__SquareFxP.Apply((__qsVar1__NlambdaPlusOneFxP__, additionalTransitionProbability));
#line 227 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    ArithmeticOperations__MultiplyConstantFxPInPlace.Apply((multiplicativeConstant, additionalTransitionProbability));
#line 229 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    Microsoft__Quantum__Arithmetic__AddFxP.Apply((additionalTransitionProbability, transitionProbability));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var __qsVar0____qsVar0__NlambdaFxP____ = new Microsoft.Quantum.Arithmetic.FixedPoint((0L, Nlambda.Data));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var __qsVar1____qsVar1__NlambdaPlusOneFxP____ = new Microsoft.Quantum.Arithmetic.FixedPoint((0L, NlambdaPlusOne.Data));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    ArithmeticOperations__MultiplyConstantFxPInPlace.Adjoint.Apply((multiplicativeConstant, additionalTransitionProbability));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    Microsoft__Quantum__Arithmetic__SquareFxP.Adjoint.Apply((__qsVar1____qsVar1__NlambdaPlusOneFxP____, additionalTransitionProbability));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    Microsoft__Quantum__Arithmetic__SquareFxP.Adjoint.Apply((__qsVar0____qsVar0__NlambdaFxP____, additionalTransitionProbability));
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(additionalTransitionProbabilityQubitRegister);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(Microsoft.Quantum.Arithmetic.LittleEndian,Microsoft.Quantum.Arithmetic.LittleEndian,Double,Microsoft.Quantum.Arithmetic.FixedPoint), QVoid> __AdjointBody__ => (__in__) =>
        {
            var (Nlambda,NlambdaPlusOne,multiplicativeConstant,transitionProbability) = __in__;
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var (__qsVar0__pointPosition__,__qsVar1__transitionProbabilityQubitRegister__) = ((Int64,IQArray<Qubit>))transitionProbability.Data;
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var __qsVar2__nQubits__ = __qsVar1__transitionProbabilityQubitRegister__.Length;
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            {
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                var __qsVar3__additionalTransitionProbabilityQubitRegister__ = Allocate__.Apply(__qsVar2__nQubits__);
#line hidden
                bool __arg1__ = true;
                try
                {
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var __qsVar4__additionalTransitionProbability__ = new Microsoft.Quantum.Arithmetic.FixedPoint((__qsVar0__pointPosition__, __qsVar3__additionalTransitionProbabilityQubitRegister__));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var __qsVar0____qsVar5__NlambdaFxP____ = new Microsoft.Quantum.Arithmetic.FixedPoint((0L, Nlambda.Data));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var __qsVar1____qsVar6__NlambdaPlusOneFxP____ = new Microsoft.Quantum.Arithmetic.FixedPoint((0L, NlambdaPlusOne.Data));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    Microsoft__Quantum__Arithmetic__SquareFxP.Apply((__qsVar0____qsVar5__NlambdaFxP____, __qsVar4__additionalTransitionProbability__));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    Microsoft__Quantum__Arithmetic__SquareFxP.Apply((__qsVar1____qsVar6__NlambdaPlusOneFxP____, __qsVar4__additionalTransitionProbability__));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    ArithmeticOperations__MultiplyConstantFxPInPlace.Apply((multiplicativeConstant, __qsVar4__additionalTransitionProbability__));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    Microsoft__Quantum__Arithmetic__AddFxP.Adjoint.Apply((__qsVar4__additionalTransitionProbability__, transitionProbability));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var __qsVar0____qsVar0____qsVar5__NlambdaFxP______ = new Microsoft.Quantum.Arithmetic.FixedPoint((0L, Nlambda.Data));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var __qsVar1____qsVar1____qsVar6__NlambdaPlusOneFxP______ = new Microsoft.Quantum.Arithmetic.FixedPoint((0L, NlambdaPlusOne.Data));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    ArithmeticOperations__MultiplyConstantFxPInPlace.Adjoint.Apply((multiplicativeConstant, __qsVar4__additionalTransitionProbability__));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    Microsoft__Quantum__Arithmetic__SquareFxP.Adjoint.Apply((__qsVar1____qsVar1____qsVar6__NlambdaPlusOneFxP______, __qsVar4__additionalTransitionProbability__));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    Microsoft__Quantum__Arithmetic__SquareFxP.Adjoint.Apply((__qsVar0____qsVar0____qsVar5__NlambdaFxP______, __qsVar4__additionalTransitionProbability__));
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(__qsVar3__additionalTransitionProbabilityQubitRegister__);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Microsoft.Quantum.Arithmetic.LittleEndian,Microsoft.Quantum.Arithmetic.LittleEndian,Double,Microsoft.Quantum.Arithmetic.FixedPoint)), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,(Nlambda,NlambdaPlusOne,multiplicativeConstant,transitionProbability)) = __in__;
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var (pointPosition,transitionProbabilityQubitRegister) = ((Int64,IQArray<Qubit>))transitionProbability.Data;
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var nQubits = transitionProbabilityQubitRegister.Length;
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            {
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                var additionalTransitionProbabilityQubitRegister = Allocate__.Apply(nQubits);
#line hidden
                bool __arg1__ = true;
                try
                {
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var additionalTransitionProbability = new Microsoft.Quantum.Arithmetic.FixedPoint((pointPosition, additionalTransitionProbabilityQubitRegister));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var __qsVar0__NlambdaFxP__ = new Microsoft.Quantum.Arithmetic.FixedPoint((0L, Nlambda.Data));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var __qsVar1__NlambdaPlusOneFxP__ = new Microsoft.Quantum.Arithmetic.FixedPoint((0L, NlambdaPlusOne.Data));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    Microsoft__Quantum__Arithmetic__SquareFxP.Apply((__qsVar0__NlambdaFxP__, additionalTransitionProbability));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    Microsoft__Quantum__Arithmetic__SquareFxP.Apply((__qsVar1__NlambdaPlusOneFxP__, additionalTransitionProbability));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    ArithmeticOperations__MultiplyConstantFxPInPlace.Apply((multiplicativeConstant, additionalTransitionProbability));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    Microsoft__Quantum__Arithmetic__AddFxP.Controlled.Apply((__controlQubits__, (additionalTransitionProbability, transitionProbability)));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var __qsVar0____qsVar0__NlambdaFxP____ = new Microsoft.Quantum.Arithmetic.FixedPoint((0L, Nlambda.Data));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var __qsVar1____qsVar1__NlambdaPlusOneFxP____ = new Microsoft.Quantum.Arithmetic.FixedPoint((0L, NlambdaPlusOne.Data));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    ArithmeticOperations__MultiplyConstantFxPInPlace.Adjoint.Apply((multiplicativeConstant, additionalTransitionProbability));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    Microsoft__Quantum__Arithmetic__SquareFxP.Adjoint.Apply((__qsVar1____qsVar1__NlambdaPlusOneFxP____, additionalTransitionProbability));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    Microsoft__Quantum__Arithmetic__SquareFxP.Adjoint.Apply((__qsVar0____qsVar0__NlambdaFxP____, additionalTransitionProbability));
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(additionalTransitionProbabilityQubitRegister);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Microsoft.Quantum.Arithmetic.LittleEndian,Microsoft.Quantum.Arithmetic.LittleEndian,Double,Microsoft.Quantum.Arithmetic.FixedPoint)), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (__controlQubits__,(Nlambda,NlambdaPlusOne,multiplicativeConstant,transitionProbability)) = __in__;
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var (__qsVar0__pointPosition__,__qsVar1__transitionProbabilityQubitRegister__) = ((Int64,IQArray<Qubit>))transitionProbability.Data;
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            var __qsVar2__nQubits__ = __qsVar1__transitionProbabilityQubitRegister__.Length;
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
            {
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                var __qsVar3__additionalTransitionProbabilityQubitRegister__ = Allocate__.Apply(__qsVar2__nQubits__);
#line hidden
                bool __arg1__ = true;
                try
                {
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var __qsVar4__additionalTransitionProbability__ = new Microsoft.Quantum.Arithmetic.FixedPoint((__qsVar0__pointPosition__, __qsVar3__additionalTransitionProbabilityQubitRegister__));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var __qsVar0____qsVar5__NlambdaFxP____ = new Microsoft.Quantum.Arithmetic.FixedPoint((0L, Nlambda.Data));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var __qsVar1____qsVar6__NlambdaPlusOneFxP____ = new Microsoft.Quantum.Arithmetic.FixedPoint((0L, NlambdaPlusOne.Data));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    Microsoft__Quantum__Arithmetic__SquareFxP.Apply((__qsVar0____qsVar5__NlambdaFxP____, __qsVar4__additionalTransitionProbability__));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    Microsoft__Quantum__Arithmetic__SquareFxP.Apply((__qsVar1____qsVar6__NlambdaPlusOneFxP____, __qsVar4__additionalTransitionProbability__));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    ArithmeticOperations__MultiplyConstantFxPInPlace.Apply((multiplicativeConstant, __qsVar4__additionalTransitionProbability__));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    Microsoft__Quantum__Arithmetic__AddFxP.Adjoint.Controlled.Apply((__controlQubits__, (__qsVar4__additionalTransitionProbability__, transitionProbability)));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var __qsVar0____qsVar0____qsVar5__NlambdaFxP______ = new Microsoft.Quantum.Arithmetic.FixedPoint((0L, Nlambda.Data));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    var __qsVar1____qsVar1____qsVar6__NlambdaPlusOneFxP______ = new Microsoft.Quantum.Arithmetic.FixedPoint((0L, NlambdaPlusOne.Data));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    ArithmeticOperations__MultiplyConstantFxPInPlace.Adjoint.Apply((multiplicativeConstant, __qsVar4__additionalTransitionProbability__));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    Microsoft__Quantum__Arithmetic__SquareFxP.Adjoint.Apply((__qsVar1____qsVar1____qsVar6__NlambdaPlusOneFxP______, __qsVar4__additionalTransitionProbability__));
#line 212 "C:\\Users\\vivie\\OneDrive\\Documents\\GitHub\\QW_Burgers\\FixedTimeSteps\\Burgers.qs"
                    Microsoft__Quantum__Arithmetic__SquareFxP.Adjoint.Apply((__qsVar0____qsVar0____qsVar5__NlambdaFxP______, __qsVar4__additionalTransitionProbability__));
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(__qsVar3__additionalTransitionProbabilityQubitRegister__);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Arithmetic__FixedPoint = this.__Factory__.Get<ICallable<(Int64,IQArray<Qubit>), Microsoft.Quantum.Arithmetic.FixedPoint>>(typeof(global::Microsoft.Quantum.Arithmetic.FixedPoint));
            this.Microsoft__Quantum__Arithmetic__SquareFxP = this.__Factory__.Get<IUnitary<(Microsoft.Quantum.Arithmetic.FixedPoint,Microsoft.Quantum.Arithmetic.FixedPoint)>>(typeof(global::Microsoft.Quantum.Arithmetic.SquareFxP));
            this.ArithmeticOperations__MultiplyConstantFxPInPlace = this.__Factory__.Get<IUnitary<(Double,Microsoft.Quantum.Arithmetic.FixedPoint)>>(typeof(global::ArithmeticOperations.MultiplyConstantFxPInPlace));
            this.Microsoft__Quantum__Arithmetic__AddFxP = this.__Factory__.Get<IUnitary<(Microsoft.Quantum.Arithmetic.FixedPoint,Microsoft.Quantum.Arithmetic.FixedPoint)>>(typeof(global::Microsoft.Quantum.Arithmetic.AddFxP));
        }

        public override IApplyData __DataIn__((Microsoft.Quantum.Arithmetic.LittleEndian,Microsoft.Quantum.Arithmetic.LittleEndian,Double,Microsoft.Quantum.Arithmetic.FixedPoint) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Microsoft.Quantum.Arithmetic.LittleEndian Nlambda, Microsoft.Quantum.Arithmetic.LittleEndian NlambdaPlusOne, Double multiplicativeConstant, Microsoft.Quantum.Arithmetic.FixedPoint transitionProbability)
        {
            return __m__.Run<IncrementConvectiveTransition, (Microsoft.Quantum.Arithmetic.LittleEndian,Microsoft.Quantum.Arithmetic.LittleEndian,Double,Microsoft.Quantum.Arithmetic.FixedPoint), QVoid>((Nlambda, NlambdaPlusOne, multiplicativeConstant, transitionProbability));
        }
    }
}